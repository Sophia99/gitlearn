--工作区和暂存区
-> 工作区（Working Directory）
	工作区是git管理的文件夹（目录）

-> 版本库（Reposity）
	1. 创建Reposity时，git会自动创建一个唯一的master分支；此后，所有的commit都是在该master分支上，添加分支。 
	2. commit可以一次性提交很多个修改内容，被修改的内容，也就是急需要commit的部分，在没有commit之前都是存放在名为index（stage）的缓存区
	
-> 管理修改
	git最大的优点是管理修改而非文件。
	git add <file> //目的是将文件添加到缓存区，那么文件被重新修改了一次就需要添加git add一次，否则文件的改变不会再缓存区
	git commit -m <string word>  //将缓存区（index）的内容提交到master的分支上。意味着，不在缓存区的文件改变不会被提交到分支上。
	
-> 撤销修改
	git checkout -- <file>  //把版本库（Reposity）里面的文件调出来
	-> --很重要；git checkout <file>  //该指令是“切换到另一个分支”
	-> 当被修改的文件不在缓存区时，使用上述的撤销修改文件后，回到最开始版本库Reposity的状态。
	-> 当被修改的文件在缓存区时，使用上面的撤销修改文件后，回到最开始文件被添加到缓存区的状态。
	
	两个方式撤销修改
	git checkout -- <file>
	git reset HEAD <file>
	
--每次需要保存好txt文件后，再使用git管理文件的改变，不然git无法得知改变。

-> 删除文件
	rm <files>
	--上面指令执行后，会导致Working Directory和Reposity不一致
		-> 确实删除文件，使用
			git rm <file>
			git commit -m "  "
		-> 删除错误，恢复文件
			git checkout -- <file>
			git checkout该指令其实使用版本库里面的版本替换工作区的版本，无论工作区是修改还是删除，都可以“一键还原”。
	
